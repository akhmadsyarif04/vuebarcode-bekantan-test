{"remainingRequest":"/srv/http/bekantan-vue-testing/node_modules/vue-loader/lib/index.js??vue-loader-options!/srv/http/bekantan-vue-testing/src/views/Barcode-3.vue?vue&type=script&lang=js&","dependencies":[{"path":"/srv/http/bekantan-vue-testing/src/views/Barcode-3.vue","mtime":1559456479820},{"path":"/srv/http/bekantan-vue-testing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/srv/http/bekantan-vue-testing/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/srv/http/bekantan-vue-testing/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/srv/http/bekantan-vue-testing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/srv/http/bekantan-vue-testing/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from \"vue\";\nimport VueQrcodeReader from \"vue-qrcode-reader\";\n\nVue.use(VueQrcodeReader);\n\n\nexport default {\n  data () {\n    return {\n      result: '',\n      error: ''\n    }\n  },\n\n  methods: {\n    onDecode (result) {\n      this.result = result\n    },\n\n    async onInit (promise) {\n      try {\n        await promise\n      } catch (error) {\n        if (error.name === 'NotAllowedError') {\n          this.error = \"ERROR: you need to grant camera access permisson\"\n        } else if (error.name === 'NotFoundError') {\n          this.error = \"ERROR: no camera on this device\"\n        } else if (error.name === 'NotSupportedError') {\n          this.error = \"ERROR: secure context required (HTTPS, localhost)\"\n        } else if (error.name === 'NotReadableError') {\n          this.error = \"ERROR: is the camera already in use?\"\n        } else if (error.name === 'OverconstrainedError') {\n          this.error = \"ERROR: installed cameras are not suitable\"\n        } else if (error.name === 'StreamApiNotSupportedError') {\n          this.error = \"ERROR: Stream API is not supported in this browser\"\n        }\n      }\n    }\n  }\n}\n\n",{"version":3,"sources":["Barcode-3.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Barcode-3.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <p class=\"error\">{{ error }}</p>\n\n    <p class=\"decode-result\">Last result: <b>{{ result }}</b></p>\n\n    <qrcode-stream @decode=\"onDecode\" @init=\"onInit\" />\n  </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport VueQrcodeReader from \"vue-qrcode-reader\";\n\nVue.use(VueQrcodeReader);\n\n\nexport default {\n  data () {\n    return {\n      result: '',\n      error: ''\n    }\n  },\n\n  methods: {\n    onDecode (result) {\n      this.result = result\n    },\n\n    async onInit (promise) {\n      try {\n        await promise\n      } catch (error) {\n        if (error.name === 'NotAllowedError') {\n          this.error = \"ERROR: you need to grant camera access permisson\"\n        } else if (error.name === 'NotFoundError') {\n          this.error = \"ERROR: no camera on this device\"\n        } else if (error.name === 'NotSupportedError') {\n          this.error = \"ERROR: secure context required (HTTPS, localhost)\"\n        } else if (error.name === 'NotReadableError') {\n          this.error = \"ERROR: is the camera already in use?\"\n        } else if (error.name === 'OverconstrainedError') {\n          this.error = \"ERROR: installed cameras are not suitable\"\n        } else if (error.name === 'StreamApiNotSupportedError') {\n          this.error = \"ERROR: Stream API is not supported in this browser\"\n        }\n      }\n    }\n  }\n}\n\n</script>\n"]}]}