{"remainingRequest":"/srv/http/bekantan-vue-testing/node_modules/babel-loader/lib/index.js!/srv/http/bekantan-vue-testing/node_modules/vuetify-loader/lib/loader.js!/srv/http/bekantan-vue-testing/node_modules/cache-loader/dist/cjs.js??ref--0-0!/srv/http/bekantan-vue-testing/node_modules/vue-loader/lib/index.js??vue-loader-options!/srv/http/bekantan-vue-testing/src/views/Barcode.vue?vue&type=script&lang=js&","dependencies":[{"path":"/srv/http/bekantan-vue-testing/src/views/Barcode.vue","mtime":1559096533740},{"path":"/srv/http/bekantan-vue-testing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/srv/http/bekantan-vue-testing/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/srv/http/bekantan-vue-testing/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/srv/http/bekantan-vue-testing/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/srv/http/bekantan-vue-testing/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport Quagga from 'vue-quaggajs'; // register component 'v-quagga'\n\nVue.use(Quagga);\nexport default {\n  name: 'VueBarcodeTest',\n  data: function data() {\n    return {\n      readerSize: {\n        width: 640,\n        height: 480\n      },\n      detecteds: []\n    };\n  },\n  methods: {\n    logIt: function logIt(data) {\n      Quagga.init({\n        inputStream: {\n          name: \"Live\",\n          type: \"LiveStream\",\n          target: document.querySelector('#yourElement') // Or '#yourElement' (optional)\n\n        },\n        decoder: {\n          readers: [\"code_128_reader\"]\n        }\n      }, function (err) {\n        if (err) {\n          console.log(err);\n          return;\n        }\n\n        console.log(\"Initialization finished. Ready to start\");\n        Quagga.start();\n      });\n      console.log('detected', data);\n    }\n  }\n};",{"version":3,"sources":["Barcode.vue"],"names":[],"mappings":";;;;;;AAOA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,MAAA,MAAA,cAAA,C,CAEA;;AACA,GAAA,CAAA,GAAA,CAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,UAAA,EAAA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,MAAA,EAAA;AAFA,OADA;AAKA,MAAA,SAAA,EAAA;AALA,KAAA;AAOA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,iBACA,IADA,EACA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA;AACA,QAAA,WAAA,EAAA;AACA,UAAA,IAAA,EAAA,MADA;AAEA,UAAA,IAAA,EAAA,YAFA;AAGA,UAAA,MAAA,EAAA,QAAA,CAAA,aAAA,CAAA,cAAA,CAHA,CAGA;;AAHA,SADA;AAMA,QAAA,OAAA,EAAA;AACA,UAAA,OAAA,EAAA,CAAA,iBAAA;AADA;AANA,OAAA,EASA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA;AACA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,yCAAA;AACA,QAAA,MAAA,CAAA,KAAA;AACA,OAhBA;AAiBA,MAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,IAAA;AACA;AApBA;AAXA,CAAA","sourcesContent":["<template>\n  <div>\n    <v-quagga class=\"viewport\" :onDetected=\"logIt\" :readerSize=\"readerSize\" :readerTypes=\"['ean_reader','code_128_reader','ean_8_reader','code_39_reader','code_39_vin_reader','codabar_reader','upc_reader','upc_e_reader','i2of5_reader']\"></v-quagga>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport Quagga from 'vue-quaggajs';\n\n// register component 'v-quagga'\nVue.use(Quagga);\n\nexport default {\n  name: 'VueBarcodeTest',\n  data () {\n    return {\n      readerSize: {\n        width: 640,\n        height: 480\n      },\n      detecteds: []\n    }\n  },\n  methods: {\n    logIt (data) {\n      Quagga.init({\n          inputStream : {\n            name : \"Live\",\n            type : \"LiveStream\",\n            target: document.querySelector('#yourElement')    // Or '#yourElement' (optional)\n          },\n          decoder : {\n            readers : [\"code_128_reader\"]\n          }\n        }, function(err) {\n            if (err) {\n                console.log(err);\n                return\n            }\n            console.log(\"Initialization finished. Ready to start\");\n            Quagga.start();\n        });\n      console.log('detected', data)\n    }\n\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}